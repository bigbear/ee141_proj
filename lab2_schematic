%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 0 80 576 676
%%Creator: Cadence Design Systems
%%EndComments
%%BeginProlog
%%DocumentFonts:Courier
%******************************************************************************
%
% The preview image should preceed this file if a preview is being generated.
%
% This should be the first line: %!PS-Adobe-2.0 EPSF-1.2
% There should also be a BBox:   %%BoundingBox:0 0 300 300
%
% Cadence Design Systems -- Supports Both Level 1 and Level 2 Printers
%
% EPS Prologue -- Version 97B (aka 9702)
%
/setpacking where
{
	/currpack currentpacking def
	pop true setpacking
} if
%******************************************************************************
/gis  {
  0 setgray
  mark
  save
  newpath

  72 resolution div
  dup
  scale

  /stippleArray 10 array def
    stippleArray
     dup    0  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    1  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    2  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    3  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    4  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    5  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    6  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    7  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    8  <08080404020201018080404020201010
	        08080404020201018080404020201010> put
	    9  <08081414222241418080414122221414
		08081414222241418080414122221414> put



  /newFont 10 dict def
  newFont begin

    /FontType 3 def
    /FontMatrix [1 0 0 1 0 0] def
     /FontBBox [0 0 1 1] def

    /Encoding 256 array def
    0 1 255 {Encoding exch /.notdef put} for
    Encoding
      dup 48 /0  put
      dup 49 /1  put
      dup 50 /2  put
      dup 51 /3  put
      dup 52 /4  put
      dup 53 /5  put
      dup 54 /6  put
      dup 55 /7  put
      dup 56 /8  put
          57 /9  put

    /BuildChar {
        /char exch def
        /fontdict exch def
	/charname fontdict /Encoding get char get def

         1 0 setcharwidth

          16 16 true
          [16 0 0 -16 -.5 15.50]
           stippleArray char 48 sub 1 getinterval cvx
          imagemask
    } def

  end
  /StippleFont newFont definefont 66 scalefont setfont
  /fillChar 0 def

  /ellipsedict 8 dict def
  ellipsedict /mtrx matrix put

  /xformdict 6 dict def
  xformdict /xformmtrx matrix put

  /rt 0 def
  /color     0 def

  /lineRed   0 def
  /lineGreen 0 def
  /lineBlue  0 def

  /fillRed   0 def
  /fillGreen 0 def
  /fillBlue  0 def

  /hatchSet 0 def

  /rht 0 def
  /rw 0 def
  /ils 1.0 def
  /textalign 1 def

  gsave

  } def

/cdsLevel2 /languagelevel where {pop languagelevel} {1} ifelse 2 ge def

/cdsColor cdsLevel2 not {
                          false
                          /colorimage where {pop pop true} if
                        } {
	                  true
                        } ifelse
def

/gfs  {
    grestore
    showpage
    restore
    cleartomark
  } def
/pap {
    /resolution exch def
    /pageHeight exch def
    /pageWidth exch def

  } bind def
/rotp  {
  /rt 90 def
  grestore
} def
/clwin  {
    /y2 exch def
    /x2 exch def
    /y1 exch def
    /x1 exch def
    rt 90 eq
      {
        pageWidth 0 translate
        rt rotate
	/rt 0 def
	gsave
      } if

    grestore
    gsave
    newpath
    x1 y1 moveto
    x2 y1 lineto
    x2 y2 lineto
    x1 y2 lineto
    closepath
    clip
    newpath
} def
/bblineto {
  dup dup   /cury exch def
  miny lt {/miny exch def}
    {dup maxy gt { /maxy exch def }
           {pop } ifelse } ifelse
  dup dup
  minx lt {/minx exch def}
    {dup maxx gt { /maxx exch def }
           { pop } ifelse } ifelse
  cury lineto
} def
/bbmoveto {
  dup dup
  /miny exch def /maxy exch def /cury exch def
  dup dup
  /minx exch def /maxx exch def
  cury moveto
} def
/ellipse
  { ellipsedict begin
    /endangle exch def
    /startangle exch def
    /yrad exch def
    /xrad exch def
    /y exch def
    /x exch def

    /savematrix mtrx currentmatrix def
    x y translate
    xrad yrad scale
    0 0 1 startangle endangle arc
    savematrix setmatrix
    end
  } def
/dls  {
  gsave
  newpath
  moveto
  rlineto
  setLineColor
  stroke
  grestore
} def
/dlt  {
  newpath
  gsave
  setLineColor
  moveto
} def
/dslt  {
  newpath
  gsave
  setLineColor
  moveto
} def
/dlv  {
  rlineto
} def
/dle  {
  stroke
  grestore
} def
/mps {
  newpath
  moveto
} def
/dbu  {
    setLineColor
    newpath
    moveto
    dup 0 rlineto
    0 3 -1 roll
    rlineto
    neg 0 rlineto
    closepath
    stroke
  } def
/dbf  {
    /y2 exch def
    /x2 exch def
    /y1 exch def
    /x1 exch def
    gsave
      newpath
      x1 y1 bbmoveto
      x2 y1 bblineto
      x2 y2 bblineto
      x1 y2 bblineto
      closepath
      clip fillpath
    grestore
  } def

/dbs  {
    /y2 exch def
    /x2 exch def
    /y1 exch def
    /x1 exch def
      newpath
      x1 y1 moveto
      x2 y1 lineto
      x2 y2 lineto
      x1 y2 lineto
      closepath
      gsave
      setFillColor
      fill grestore
      setLineColor stroke

} def
/dpb { gsave
      newpath bbmoveto
} def
/dpu  {
        closepath
        setLineColor
        stroke
      grestore
} def
/dpf  {
       closepath
       clip fillpath
     grestore
} def
/dps  {
       closepath
       setFillColor
       fill grestore
       setLineColor stroke
} def
/dpv  {
    bblineto
} def
/dcu  {
    /radius exch def
    /y exch def
    /x exch def

    gsave
      newpath
      x y radius radius 0 360 ellipse
      setLineColor
      stroke
    grestore
} def
/dcf  {
    /radius exch def
    /y exch def
    /x exch def
    /minx x radius sub def
    /miny y radius sub def
    /maxx x radius add def
    /maxy y radius add def
    gsave
      newpath
      x y radius radius 0 360 ellipse
      clip fillpath
    grestore
  } def
/dcs  {
    /radius exch def
    /y exch def
    /x exch def

    gsave
      newpath
      x y radius radius 0 360 ellipse
      setFillColor
      fill
    grestore
    setLineColor stroke
  } def
/delu  {
    /yradius exch def
    /xradius exch def
    /y exch def
    /x exch def

    newpath
      x y xradius yradius 0 360 ellipse
      gsave
      setFillColor
      stroke
    grestore
  } def
/delf  {
    /yradius exch def
    /xradius exch def
    /y exch def
    /x exch def
    /minx x xradius sub def
    /miny y yradius sub def
    /maxx x xradius add def
    /maxy y yradius add def

    gsave
      newpath
      x y xradius yradius 0 360 ellipse
      clip fillpath
    grestore
  } def
/dels  {
    /yradius exch def
    /xradius exch def
    /y exch def
    /x exch def

    gsave
      newpath
      x y xradius yradius 0 360 ellipse
      setFillColor fill
    grestore
    setLineColor stroke
} def
/dau  { gsave
          newpath ellipse
          setLineColor
          stroke
        grestore
} def
/setlinedash {
    1 index length 11 gt
    {exch dup length 11 sub 11 getinterval exch } if
    setdash
} def

/lpb    {
    pop
    [
    /offset 0 def
    /offcount 0 def
    /oncount 0 def
} def

/lpon  {
    /oncount exch def
    pop
    oncount
} def

/lpoff  {
    /offcount exch def
    pop
    oncount 0 eq
    {/offset offcount def }
    { offcount } ifelse
} def

/lpe  {
    /linewidth exch def
    pop
    offset 0 ne
    { offset } if ] 0 setlinedash
    linewidth setlinewidth
} def

/sls    { pop } def

/ssls  { [] 0 setdash
          1 setlinewidth
} def
/fillpath  {
    setFillColor
    /str 1 string def
    /minx minx 66 div
    truncate 66 mul def
    /miny miny 66 div
    truncate 66 mul def

          /fillLine maxx minx sub cvi 66 idiv 1 add string def

          0 1 fillLine length 1 sub {
            fillLine exch fillChar str cvs cvi 48 add put
          } for

          minx
          miny 66 maxy
            { exch dup 3 -1 roll moveto fillLine show
          } for pop
    hatchSet 1 eq {setLineColor stroke} if
} def

/fds  { pop /currchar 30 def} def
/fdf   {
    exch
    /char exch def
    /stipple stippleArray char get def
    stipple exch currchar
    exch putinterval
    stippleArray char stipple put
    /currchar currchar 2 sub def
  } def
/fde  {
    pop
  } def
/sfp  {
    /fillChar exch def
    /hatchSet 0 def
    fillChar 8 ge {/hatchSet 1 def} if
    /StippleFont findfont 66 scalefont setfont
  } def

  /setLineColor {
    cdsLevel2 cdsColor or {
      lineRed    1000 div
      lineGreen  1000 div
      lineBlue   1000 div
      setrgbcolor } if
  } def

  /setFillColor {
    cdsLevel2 cdsColor or {
      fillRed    1000 div
      fillGreen  1000 div
      fillBlue   1000 div
      setrgbcolor }
      { 0 setgray } ifelse
  } def

  /slc {
    /lineBlue  exch def
    /lineGreen exch def
    /lineRed   exch def
    /color 1 def
    lineBlue 1000 eq {lineGreen 1000 eq {lineRed 1000 eq {
      /lineBlue  0 def
      /lineGreen 0 def
      /lineRed   0 def
    } if} if} if
  } def

  /sfc {
    /fillBlue  exch def
    /fillGreen exch def
    /fillRed   exch def
    /color 1 def
    fillBlue 1000 eq {fillGreen 1000 eq {fillRed 1000 eq {
      /fillBlue  0 def
      /fillGreen 0 def
      /fillRed   0 def
    } if} if} if
  } def

%******************************************************************************
% Resident Font Scale Sequence
%    x y rfss
%
/rfss  {
    4 2 roll
    dup
    3 div
    add
    scalefont
    setfont
    0 color ne {setLineColor}
               { 0 setgray } ifelse
  } bind def
%******************************************************************************
% Resident Font End
%
%
/rfe
{
/width exch def
5 1 roll
moveto

xformdict begin
/savematrix xformmtrx currentmatrix def

exch 				% rotate mirror to mirror rotate
matrix rotate concat		% add rotation to current transform matrix
dup 1 eq
	{pop 1 -1}		% X mirror

	{2 eq
		{-1 1}		% Y mirror
		{1 1}		% No mirror
	ifelse}
ifelse matrix scale concat	% add mirror to current transform matrix


dup				% duplicate (string)
length				% replace one of the strings with its length
dup 0 ne
{
	3 -1 roll		% move fixed width flag to top of stack
	0 eq
	{			% if flag is false (0) do old string handling
		/numChr exch def
		dup stringwidth	%stack  wy,wx,(string)
		pop
		width
		exch sub	%stack  xdiff,ydiff,(string)

		cvi
		numChr idiv	%stack  xspace,ydiff,(string)

		/xoff exch def

		{		% this is the positioning  function for kshow
			pop pop
			xoff
			0
			rmoveto
		}

		exch
		kshow
	}

	{			% if flag is true (not 0) just show string
		pop show
	}
	ifelse
}

{
	pop pop pop
}
ifelse
      savematrix setmatrix
    end
  } bind def
%******************************************************************************
% Resident Font Text Alignment
%
/rfta {						% <align> rfta
	/textalign exch def
} bind def
%******************************************************************************
% Resident Font Interline Space
%
/rfis {						% <space> rfis
	/ils exch def
} bind def
%******************************************************************************
% Resident Font Scale
%
/rfsc {						% <ht> <rotate> <mirror> rfs
% What I need to do here is to validate <ht>.  <ht> can not be 0.  If it is 0
% then make it 1.  To do this I will need to use the roll operation and exch
% and maybe dup.  The algorithm looks like this:
% Roll stack to make it look like : <rotate> <mirror> <ht>
% duplicate <ht> so I can test it.
% If <ht> is equal to 0 then
% exchange 1 for <ht>
% In any case roll stack to make it look like: <ht> <rotate> <mirror>
% qed.
%
	3 -1 roll		% <rotate> <mirror> <ht>
	dup 0 eq
	{
		1 exch pop	% <rotate> <mirror> <ht=1>
	}
	if
	3 1 roll		% <ht> <rotate> <mirror>

	0 color ne
	{
		setLineColor
	}
	{
		0 setgray
	}
	ifelse

	/tasz 60 def
	/taln 59 def

	/ta tasz array def
	/cta ta def
	/tc 0 def
	/sa tasz array def
	/sc 0 def
} bind def
%******************************************************************************
% Resident Font Restricted Text
%
/rfrt {						% <height> <width> rfrt
	/rht exch def
	/rw exch def
	% Since restricting one dimension and not the other is not supported
	% if one dimension is turned off then ensure that both dimensions
	% are turned off (a value of 0 means no restriction)
	rht 0 eq rw 0 eq or
	{
		/rht 0 def
		/rw 0 def
	}
	if
} bind def
%******************************************************************************
% Resident Font Text Score
%
/rfts {						% <score> <start> <end> rfts
	sc tasz lt
	{
		3 -1 roll 3 array astore
		sa sc 3 -1 roll put
		/sc sc 1 add def
	}
	{
		pop pop pop
	} ifelse
} bind def
%******************************************************************************
% Resident Font Text
%
/rft {						% (text) rft
	tc taln gt tc tasz mod 0 eq and
	{
		cta /cta tasz array dup def put
	} if

	tc tasz mod exch cta 3 1 roll sc
	sa dup length array copy
	3 array astore put

	/sc 0 def
	/tc tc 1 add def
} bind def
%******************************************************************************
% Resident Font Complete
%
/rfc {						% <x> <y> rfc
	/cta ta def

	%
	% If text is restricted or if text alignment is not left, find the
	% longest text string
	%
	/mw 0 def
	rw 0 ne textalign 3 gt or
	{
		%
		% Find the widest text string
		%
		5 index		% <fn> <ht> <rot> <mir> <x> <y> <fn>
		setfont
		0 1 tc 1 sub
		{
			dup taln gt 1 index tasz mod 0 eq and
			{
				/cta cta tasz get def
			}
			if

			tasz mod cta exch get 0 get
			stringwidth pop dup mw gt
			{
				/mw exch def null
			}
			if

			pop
		}
		for

		/cta ta def
	}
	if

	%
	% Operand stack:		<fn> <ht> <rot> <mir> <x> <y>
	% Check for restricted text
	%
	rw 0 ne
	{

		%
		% Compute font scale factors
		%
		6 -2 roll pop		% <rot> <mir> <x> <y> <fn>
		rw mw div
		rht tc div dup ils mul 0.5 add cvi /tht exch def
		matrix scale makefont	% <rot> <mir> <x> <y> <fn>
		/mw rw def
	}
	{
		6 -2 roll		% <rot> <mir> <x> <y> <fn> <ht>
		dup 0 eq		% Test if height is 0
		{			% change to 1 if it is
                	1 exch pop	% <rot> <mir> <x> <y> <fn> <1>
		}
		if
		dup ils mul 0.5 add cvi /tht exch def
		dup mw mul /mw exch def scalefont
	}
	ifelse

	setfont				% <rot> <mir> <x> <y>

	moveto			% <rot> <mir>

	xformdict begin
		/savematrix xformmtrx currentmatrix def

		exch matrix rotate concat
		dup 1 eq
		{
			pop 1.0 -1.0		% x mirror
		}
		{
			2 eq
			{
				-1.0 1.0	% y mirror
			}
			{
				1.0 1.0		% no mirror
			}
			ifelse
		}
		ifelse
		matrix scale concat

		currentpoint

		%
		% Adjust origin for text alignment. For lc (4), cc (5), and uc
		% (6) move left by width / 2. For lr (7), cr (8), and ur (9)
		% move left by width. For cl (2), cc (5), and cr (8) move down
		% by height / 2. For ul (3), uc (6), and ur (9) move down by
		% height.
		%
		textalign 2 eq textalign 5 eq or textalign 8 eq or
		{
			tht tc mul 2 div sub
		} if
		textalign 3 eq textalign 6 eq or textalign 9 eq or
		{
			tht tc mul sub
		} if
		/oy exch def

		textalign 3 gt textalign 7 lt and
		{
			mw 2 div sub
		} if
		textalign 6 gt textalign 10 lt and
		{
			mw sub
		} if
		/ox exch def

		0 1 tc 1 sub
		{
			dup taln gt 1 index tasz mod 0 eq and
			{
				/cta cta tasz get def
			}
			if

			cta exch tasz mod get aload pop
			dup 3 -1 roll	% (str) [score] [score] <cnt>
			0 1 3 -1 roll 1 sub	% (str) [score] [score] 0 1 <cnt>
			{
				newpath ox oy moveto
				get aload pop pop exch	% ... <len> <start>
				dup 0 exch		% ... <len> <start> 0 <s
				5 index 3 1 roll	% ... (str) 0 <start>
				getinterval		% ... <len> <start> (.)
				stringwidth pop tht rmoveto
				3 index			% ... <len> <start> (str)
				3 1 roll exch		% ... (str) <start> <len>
%				dup 3 1 roll
%				sub
				getinterval stringwidth pop
				0 rlineto stroke
				dup
			}
			for
			pop pop
			ox oy moveto
			show

			%
			% Move origin for next line
			%
			/oy oy tht sub def
		}
		for

		savematrix setmatrix
	end
	pop					% throw away the "0"
} bind def
%*****************************
%
% End of Cadence eps.prologue
%
%*****************************
/setpacking where
{
	pop currpack setpacking
} if
%%EndProlog
/#copies 1 def
 2400 3150 300 pap
%%Page: cds 1
gis
rotp
336 0 2814 2398 clwin
336 0 2813 2399 clwin
336 0 2814 2400 clwin
ssls
1525 1751 dlt
-2 -11 dlv
0 11 dlv
2 2 dlv
2 -2 dlv
-4 -11 dlv
dle
1542 1751 dlt
-2 -11 dlv
0 11 dlv
2 2 dlv
2 -2 dlv
-4 -11 dlv
dle
1577 1740 dlt
0 -30 dlv
-2 -6 dlv
-1 -2 dlv
-4 -2 dlv
-6 0 dlv
-3 2 dlv
dle
1577 1734 dlt
-3 4 dlv
-4 2 dlv
-6 0 dlv
-3 -2 dlv
-4 -4 dlv
-2 -6 dlv
0 -3 dlv
2 -6 dlv
4 -4 dlv
3 -1 dlv
6 0 dlv
4 1 dlv
3 4 dlv
dle
0 -40 1592 1740 dls
1592 1734 dlt
4 4 dlv
4 2 dlv
5 0 dlv
4 -2 dlv
4 -4 dlv
2 -6 dlv
0 -3 dlv
-2 -6 dlv
-4 -4 dlv
-4 -1 dlv
-5 0 dlv
-4 1 dlv
-4 4 dlv
dle
0 -39 1648 1753 dls
1648 1734 dlt
-4 4 dlv
-3 2 dlv
-6 0 dlv
-4 -2 dlv
-3 -4 dlv
-2 -6 dlv
0 -3 dlv
2 -6 dlv
3 -4 dlv
4 -1 dlv
6 0 dlv
3 1 dlv
4 4 dlv
dle
0 -39 1663 1753 dls
-19 -19 1682 1740 dls
13 -14 1671 1728 dls
1704 1753 dlt
-5 -2 dlv
-4 -6 dlv
-2 -9 dlv
0 -6 dlv
2 -9 dlv
4 -6 dlv
5 -1 dlv
4 0 dlv
5 1 dlv
4 6 dlv
2 9 dlv
0 6 dlv
-2 9 dlv
-4 6 dlv
-5 2 dlv
-4 0 dlv
dle
-26 -39 1719 1753 dls
1755 1740 dlt
-2 -6 dlv
-4 -4 dlv
-6 -2 dlv
-2 0 dlv
-5 2 dlv
-4 4 dlv
-2 6 dlv
0 2 dlv
2 5 dlv
4 4 dlv
5 2 dlv
2 0 dlv
6 -2 dlv
4 -4 dlv
2 -7 dlv
0 -10 dlv
-2 -9 dlv
-4 -6 dlv
-6 -1 dlv
-3 0 dlv
-6 1 dlv
-2 4 dlv
dle
1779 1753 dlt
-6 -2 dlv
-4 -6 dlv
-1 -9 dlv
0 -6 dlv
1 -9 dlv
4 -6 dlv
6 -1 dlv
4 0 dlv
5 1 dlv
4 6 dlv
2 9 dlv
0 6 dlv
-2 9 dlv
-4 6 dlv
-5 2 dlv
-4 0 dlv
dle
-26 -39 1794 1753 dls
30 0 1801 1710 dls
0 -40 1844 1740 dls
1844 1734 dlt
4 4 dlv
4 2 dlv
5 0 dlv
4 -2 dlv
4 -4 dlv
1 -6 dlv
0 -3 dlv
-1 -6 dlv
-4 -4 dlv
-4 -1 dlv
-5 0 dlv
-4 1 dlv
-4 4 dlv
dle
0 -26 1880 1740 dls
1880 1732 dlt
5 6 dlv
4 2 dlv
5 0 dlv
4 -2 dlv
2 -6 dlv
0 -18 dlv
dle
1900 1732 dlt
6 6 dlv
3 2 dlv
6 0 dlv
4 -2 dlv
2 -6 dlv
0 -18 dlv
dle
1943 1740 dlt
-4 -2 dlv
-4 -4 dlv
-1 -6 dlv
0 -3 dlv
1 -6 dlv
4 -4 dlv
4 -1 dlv
6 0 dlv
3 1 dlv
4 4 dlv
2 6 dlv
0 3 dlv
-2 6 dlv
-4 4 dlv
-3 2 dlv
-6 0 dlv
dle
1990 1734 dlt
-2 4 dlv
-6 2 dlv
-5 0 dlv
-6 -2 dlv
-2 -4 dlv
2 -4 dlv
4 -2 dlv
9 -1 dlv
4 -2 dlv
2 -4 dlv
0 -2 dlv
-2 -4 dlv
-6 -1 dlv
-5 0 dlv
-6 1 dlv
-2 4 dlv
dle
2006 1745 dlt
4 2 dlv
6 6 dlv
0 -39 dlv
dle
2031 1740 dlt
11 -26 dlv
11 26 dlv
dle
2066 1751 dlt
-2 -11 dlv
0 11 dlv
2 2 dlv
2 -2 dlv
-4 -11 dlv
dle
2083 1751 dlt
-2 -11 dlv
0 11 dlv
2 2 dlv
2 -2 dlv
-4 -11 dlv
dle
0 -39 1523 1532 dls
1540 1519 dlt
-2 -2 dlv
2 -1 dlv
2 1 dlv
-2 2 dlv
dle
1540 1497 dlt
-2 -2 dlv
2 -2 dlv
2 2 dlv
-2 2 dlv
dle
1561 1525 dlt
3 2 dlv
6 5 dlv
0 -39 dlv
dle
1598 1532 dlt
-6 -2 dlv
-4 -5 dlv
-1 -9 dlv
0 -6 dlv
1 -9 dlv
4 -6 dlv
6 -2 dlv
4 0 dlv
5 2 dlv
4 6 dlv
2 9 dlv
0 6 dlv
-2 9 dlv
-4 5 dlv
-5 2 dlv
-4 0 dlv
dle
-26 -39 1613 1532 dls
1635 1532 dlt
-5 -2 dlv
-4 -5 dlv
-2 -9 dlv
0 -6 dlv
2 -9 dlv
4 -6 dlv
5 -2 dlv
4 0 dlv
5 2 dlv
4 6 dlv
2 9 dlv
0 6 dlv
-2 9 dlv
-4 5 dlv
-5 2 dlv
-4 0 dlv
dle
-26 -39 1650 1532 dls
0 -26 1663 1519 dls
1663 1512 dlt
6 5 dlv
3 2 dlv
6 0 dlv
4 -2 dlv
2 -5 dlv
0 -19 dlv
dle
0 -26 1523 1446 dls
1523 1438 dlt
6 6 dlv
4 2 dlv
5 0 dlv
4 -2 dlv
2 -6 dlv
0 -18 dlv
dle
1544 1438 dlt
5 6 dlv
4 2 dlv
6 0 dlv
3 -2 dlv
2 -6 dlv
0 -18 dlv
dle
1581 1446 dlt
-2 -2 dlv
2 -2 dlv
2 2 dlv
-2 2 dlv
dle
1581 1423 dlt
-2 -1 dlv
2 -2 dlv
2 2 dlv
-2 1 dlv
dle
1602 1451 dlt
3 2 dlv
6 6 dlv
0 -39 dlv
dle
1521 1666 dlt
8 -26 dlv
7 26 dlv
8 -26 dlv
7 26 dlv
dle
34 0 1564 1662 dls
34 0 1564 1651 dls
1613 1670 dlt
0 2 dlv
2 4 dlv
1 1 dlv
4 2 dlv
8 0 dlv
3 -2 dlv
2 -1 dlv
2 -4 dlv
0 -4 dlv
-2 -4 dlv
-3 -5 dlv
-19 -19 dlv
26 0 dlv
dle
1676 1653 dlt
-28 0 dlv
19 26 dlv
0 -39 dlv
dle
1697 1679 dlt
-6 -2 dlv
-4 -5 dlv
-1 -10 dlv
0 -5 dlv
1 -9 dlv
4 -6 dlv
6 -2 dlv
3 0 dlv
6 2 dlv
4 6 dlv
2 9 dlv
0 5 dlv
-2 10 dlv
-4 5 dlv
-6 2 dlv
-3 0 dlv
dle
-26 -39 1712 1679 dls
0 -26 1725 1666 dls
1725 1659 dlt
5 5 dlv
4 2 dlv
6 0 dlv
3 -2 dlv
2 -5 dlv
0 -19 dlv
dle
1521 834 dlt
8 -26 dlv
7 26 dlv
8 -26 dlv
7 26 dlv
dle
1566 834 dlt
-2 -2 dlv
2 -2 dlv
2 2 dlv
-2 2 dlv
dle
1566 811 dlt
-2 -2 dlv
2 -1 dlv
2 1 dlv
-2 2 dlv
dle
1587 839 dlt
3 2 dlv
6 6 dlv
0 -39 dlv
dle
1615 837 dlt
0 2 dlv
1 4 dlv
2 2 dlv
4 2 dlv
8 0 dlv
3 -2 dlv
2 -2 dlv
2 -4 dlv
0 -3 dlv
-2 -4 dlv
-4 -6 dlv
-18 -18 dlv
26 0 dlv
dle
1661 847 dlt
-5 -2 dlv
-4 -6 dlv
-2 -9 dlv
0 -6 dlv
2 -9 dlv
4 -6 dlv
5 -1 dlv
4 0 dlv
6 1 dlv
3 6 dlv
2 9 dlv
0 6 dlv
-2 9 dlv
-3 6 dlv
-6 2 dlv
-4 0 dlv
dle
-26 -39 1676 847 dls
0 -26 1689 834 dls
1689 826 dlt
6 6 dlv
4 2 dlv
5 0 dlv
4 -2 dlv
2 -6 dlv
0 -18 dlv
dle
0 -39 1523 700 dls
1540 687 dlt
-2 -2 dlv
2 -2 dlv
2 2 dlv
-2 2 dlv
dle
1540 664 dlt
-2 -2 dlv
2 -1 dlv
2 1 dlv
-2 2 dlv
dle
1561 692 dlt
3 2 dlv
6 6 dlv
0 -39 dlv
dle
1598 700 dlt
-6 -2 dlv
-4 -6 dlv
-1 -9 dlv
0 -6 dlv
1 -9 dlv
4 -6 dlv
6 -1 dlv
4 0 dlv
5 1 dlv
4 6 dlv
2 9 dlv
0 6 dlv
-2 9 dlv
-4 6 dlv
-5 2 dlv
-4 0 dlv
dle
-26 -39 1613 700 dls
1635 700 dlt
-5 -2 dlv
-4 -6 dlv
-2 -9 dlv
0 -6 dlv
2 -9 dlv
4 -6 dlv
5 -1 dlv
4 0 dlv
5 1 dlv
4 6 dlv
2 9 dlv
0 6 dlv
-2 9 dlv
-4 6 dlv
-5 2 dlv
-4 0 dlv
dle
-26 -39 1650 700 dls
0 -26 1663 687 dls
1663 679 dlt
6 6 dlv
3 2 dlv
6 0 dlv
4 -2 dlv
2 -6 dlv
0 -18 dlv
dle
1525 918 dlt
-2 -11 dlv
0 11 dlv
2 2 dlv
2 -2 dlv
-4 -11 dlv
dle
1542 918 dlt
-2 -11 dlv
0 11 dlv
2 2 dlv
2 -2 dlv
-4 -11 dlv
dle
1577 907 dlt
0 -30 dlv
-2 -5 dlv
-1 -2 dlv
-4 -2 dlv
-6 0 dlv
-3 2 dlv
dle
1577 902 dlt
-3 3 dlv
-4 2 dlv
-6 0 dlv
-3 -2 dlv
-4 -3 dlv
-2 -6 dlv
0 -4 dlv
2 -5 dlv
4 -4 dlv
3 -2 dlv
6 0 dlv
4 2 dlv
3 4 dlv
dle
0 -39 1592 907 dls
1592 902 dlt
4 3 dlv
4 2 dlv
5 0 dlv
4 -2 dlv
4 -3 dlv
2 -6 dlv
0 -4 dlv
-2 -5 dlv
-4 -4 dlv
-4 -2 dlv
-5 0 dlv
-4 2 dlv
-4 4 dlv
dle
0 -39 1648 920 dls
1648 902 dlt
-4 3 dlv
-3 2 dlv
-6 0 dlv
-4 -2 dlv
-3 -3 dlv
-2 -6 dlv
0 -4 dlv
2 -5 dlv
3 -4 dlv
4 -2 dlv
6 0 dlv
3 2 dlv
4 4 dlv
dle
0 -39 1663 920 dls
-19 -19 1682 907 dls
13 -15 1671 896 dls
1704 920 dlt
-5 -2 dlv
-4 -5 dlv
-2 -10 dlv
0 -5 dlv
2 -10 dlv
4 -5 dlv
5 -2 dlv
4 0 dlv
5 2 dlv
4 5 dlv
2 10 dlv
0 5 dlv
-2 10 dlv
-4 5 dlv
-5 2 dlv
-4 0 dlv
dle
-26 -39 1719 920 dls
1755 907 dlt
-2 -5 dlv
-4 -4 dlv
-6 -2 dlv
-2 0 dlv
-5 2 dlv
-4 4 dlv
-2 5 dlv
0 2 dlv
2 6 dlv
4 3 dlv
5 2 dlv
2 0 dlv
6 -2 dlv
4 -3 dlv
2 -8 dlv
0 -9 dlv
-2 -10 dlv
-4 -5 dlv
-6 -2 dlv
-3 0 dlv
-6 2 dlv
-2 4 dlv
dle
1779 920 dlt
-6 -2 dlv
-4 -5 dlv
-1 -10 dlv
0 -5 dlv
1 -10 dlv
4 -5 dlv
6 -2 dlv
4 0 dlv
5 2 dlv
4 5 dlv
2 10 dlv
0 5 dlv
-2 10 dlv
-4 5 dlv
-5 2 dlv
-4 0 dlv
dle
-26 -39 1794 920 dls
30 0 1801 877 dls
0 -26 1844 907 dls
1844 900 dlt
6 5 dlv
3 2 dlv
6 0 dlv
4 -2 dlv
2 -5 dlv
0 -19 dlv
dle
0 -26 1880 907 dls
1880 900 dlt
5 5 dlv
4 2 dlv
5 0 dlv
4 -2 dlv
2 -5 dlv
0 -19 dlv
dle
1900 900 dlt
6 5 dlv
3 2 dlv
6 0 dlv
4 -2 dlv
2 -5 dlv
0 -19 dlv
dle
1943 907 dlt
-4 -2 dlv
-4 -3 dlv
-1 -6 dlv
0 -4 dlv
1 -5 dlv
4 -4 dlv
4 -2 dlv
6 0 dlv
3 2 dlv
4 4 dlv
2 5 dlv
0 4 dlv
-2 6 dlv
-4 3 dlv
-3 2 dlv
-6 0 dlv
dle
1990 902 dlt
-2 3 dlv
-6 2 dlv
-5 0 dlv
-6 -2 dlv
-2 -3 dlv
2 -4 dlv
4 -2 dlv
9 -2 dlv
4 -2 dlv
2 -4 dlv
0 -1 dlv
-2 -4 dlv
-6 -2 dlv
-5 0 dlv
-6 2 dlv
-2 4 dlv
dle
2006 913 dlt
4 2 dlv
6 5 dlv
0 -39 dlv
dle
2031 907 dlt
11 -26 dlv
11 26 dlv
dle
2066 918 dlt
-2 -11 dlv
0 11 dlv
2 2 dlv
2 -2 dlv
-4 -11 dlv
dle
2083 918 dlt
-2 -11 dlv
0 11 dlv
2 2 dlv
2 -2 dlv
-4 -11 dlv
dle
0 -26 1523 613 dls
1523 606 dlt
6 5 dlv
4 2 dlv
5 0 dlv
4 -2 dlv
2 -5 dlv
0 -19 dlv
dle
1544 606 dlt
5 5 dlv
4 2 dlv
6 0 dlv
3 -2 dlv
2 -5 dlv
0 -19 dlv
dle
1581 613 dlt
-2 -2 dlv
2 -1 dlv
2 1 dlv
-2 2 dlv
dle
1581 591 dlt
-2 -2 dlv
2 -2 dlv
2 2 dlv
-2 2 dlv
dle
1602 619 dlt
3 2 dlv
6 5 dlv
0 -39 dlv
dle
1548 1787 dlt
0 39 dlv
16 0 dlv
6 -2 dlv
2 -2 dlv
2 -3 dlv
0 -6 dlv
-2 -4 dlv
-2 -1 dlv
-6 -2 dlv
-16 0 dlv
dle
1587 1787 dlt
0 39 dlv
15 -39 dlv
15 39 dlv
0 -39 dlv
dle
1641 1826 dlt
-6 -2 dlv
-3 -5 dlv
-2 -10 dlv
0 -5 dlv
2 -10 dlv
3 -5 dlv
6 -2 dlv
4 0 dlv
5 2 dlv
4 5 dlv
2 10 dlv
0 5 dlv
-2 10 dlv
-4 5 dlv
-5 2 dlv
-4 0 dlv
dle
-26 -39 1656 1826 dls
1548 954 dlt
0 40 dlv
26 -40 dlv
0 40 dlv
dle
1589 954 dlt
0 40 dlv
15 -40 dlv
15 40 dlv
0 -40 dlv
dle
1643 994 dlt
-6 -2 dlv
-4 -6 dlv
-1 -9 dlv
0 -6 dlv
1 -9 dlv
4 -6 dlv
6 -2 dlv
4 0 dlv
5 2 dlv
4 6 dlv
2 9 dlv
0 6 dlv
-2 9 dlv
-4 6 dlv
-5 2 dlv
-4 0 dlv
dle
-26 -40 1658 994 dls
2716 1082 dpb
2716 1170 dpv
2769 1170 dpv
2813 1126 dpv
2769 1082 dpv
dpu
512 1131 dpb
512 1219 dpv
566 1219 dpv
610 1175 dpv
566 1131 dpv
dpu
0 147 1491 48 dls
1442 48 dpb
1540 48 dpv
1491 0 dpv
dpu
245 0 1369 2350 dls
0 196 1491 2154 dls
0 147 1369 1542 dls
1393 1542 dlt
98 0 dlv
0 -73 dlv
dle
1393 1689 dlt
98 0 dlv
0 74 dlv
dle
74 0 1295 1616 dls
1477 1714 dlt
-49 -25 dlv
49 -24 dlv
dle
98 0 1393 1616 dls
0 147 1393 1542 dls
1393 857 dlt
98 0 dlv
0 73 dlv
dle
0 147 1393 710 dls
1442 734 dlt
49 -24 dlv
-49 -25 dlv
dle
74 0 1295 783 dls
0 147 1369 710 dls
98 0 1393 783 dls
1393 710 dlt
98 0 dlv
0 -74 dlv
dle
0 -39 1224 1813 dls
1224 1808 dlt
4 3 dlv
4 2 dlv
6 0 dlv
3 -2 dlv
4 -3 dlv
2 -6 dlv
0 -4 dlv
-2 -5 dlv
-4 -4 dlv
-3 -2 dlv
-6 0 dlv
-4 2 dlv
-4 4 dlv
dle
0 -26 1260 1813 dls
1260 1806 dlt
6 5 dlv
3 2 dlv
6 0 dlv
4 -2 dlv
1 -5 dlv
0 -19 dlv
dle
1280 1806 dlt
6 5 dlv
4 2 dlv
5 0 dlv
4 -2 dlv
2 -5 dlv
0 -19 dlv
dle
1323 1813 dlt
-3 -2 dlv
-4 -3 dlv
-2 -6 dlv
0 -4 dlv
2 -5 dlv
4 -4 dlv
3 -2 dlv
6 0 dlv
4 2 dlv
3 4 dlv
2 5 dlv
0 4 dlv
-2 6 dlv
-3 3 dlv
-4 2 dlv
-6 0 dlv
dle
1370 1808 dlt
-2 3 dlv
-5 2 dlv
-6 0 dlv
-6 -2 dlv
-2 -3 dlv
2 -4 dlv
4 -2 dlv
9 -2 dlv
4 -2 dlv
2 -4 dlv
0 -1 dlv
-2 -4 dlv
-5 -2 dlv
-6 0 dlv
-6 2 dlv
-2 4 dlv
dle
1387 1819 dlt
4 2 dlv
5 5 dlv
0 -39 dlv
dle
1411 1813 dlt
11 -26 dlv
11 26 dlv
dle
0 -27 1224 981 dls
1224 973 dlt
6 6 dlv
4 2 dlv
5 0 dlv
4 -2 dlv
2 -6 dlv
0 -19 dlv
dle
0 -27 1260 981 dls
1260 973 dlt
6 6 dlv
3 2 dlv
6 0 dlv
4 -2 dlv
1 -6 dlv
0 -19 dlv
dle
1280 973 dlt
6 6 dlv
4 2 dlv
5 0 dlv
4 -2 dlv
2 -6 dlv
0 -19 dlv
dle
1323 981 dlt
-3 -2 dlv
-4 -4 dlv
-2 -6 dlv
0 -3 dlv
2 -6 dlv
4 -4 dlv
3 -2 dlv
6 0 dlv
4 2 dlv
3 4 dlv
2 6 dlv
0 3 dlv
-2 6 dlv
-3 4 dlv
-4 2 dlv
-6 0 dlv
dle
1370 975 dlt
-2 4 dlv
-5 2 dlv
-6 0 dlv
-6 -2 dlv
-2 -4 dlv
2 -4 dlv
4 -2 dlv
9 -1 dlv
4 -2 dlv
2 -4 dlv
0 -2 dlv
-2 -4 dlv
-5 -2 dlv
-6 0 dlv
-6 2 dlv
-2 4 dlv
dle
1387 986 dlt
4 2 dlv
5 6 dlv
0 -40 dlv
dle
1411 981 dlt
11 -27 dlv
11 27 dlv
dle
1516 342 dpb
1511 352 dpv
1506 362 dpv
1496 367 dpv
1481 367 dpv
1472 357 dpv
1467 347 dpv
1467 337 dpv
1472 328 dpv
1481 318 dpv
1496 318 dpv
1506 323 dpv
1511 333 dpv
dps
539 0 1491 342 dls
0 294 1491 342 dls
0 441 2030 342 dls
539 0 1491 783 dls
0 147 1491 195 dls
1516 1126 dpb
1511 1136 dpv
1506 1145 dpv
1496 1150 dpv
1481 1150 dpv
1472 1141 dpv
1467 1131 dpv
1467 1121 dpv
1472 1111 dpv
1481 1101 dpv
1496 1101 dpv
1506 1106 dpv
1511 1116 dpv
dps
1274 0 1491 1126 dls
0 343 1491 1126 dls
342 0 953 783 dls
977 1175 dpb
972 1185 dpv
967 1194 dpv
957 1199 dpv
943 1199 dpv
933 1190 dpv
928 1180 dpv
928 1170 dpv
933 1160 dpv
943 1150 dpv
957 1150 dpv
967 1155 dpv
972 1165 dpv
dps
0 392 953 783 dls
392 0 561 1175 dls
0 441 953 1175 dls
342 0 953 1616 dls
441 0 1491 1616 dls
0 342 1932 1616 dls
1516 1958 dpb
1511 1968 dpv
1506 1978 dpv
1496 1983 dpv
1481 1983 dpv
1472 1973 dpv
1467 1963 dpv
1467 1953 dpv
1472 1944 dpv
1481 1934 dpv
1496 1934 dpv
1506 1939 dpv
1511 1949 dpv
dps
441 0 1491 1958 dls
0 196 1491 1958 dls
0 195 1491 1763 dls
0 196 1491 930 dls
2563 1134 dlt
-5 -2 dlv
-5 -5 dlv
-2 -7 dlv
0 -5 dlv
2 -7 dlv
5 -4 dlv
5 -3 dlv
7 0 dlv
4 3 dlv
5 4 dlv
2 7 dlv
0 5 dlv
-2 7 dlv
-5 5 dlv
-4 2 dlv
-7 0 dlv
dle
2598 1134 dlt
0 -23 dlv
2 -7 dlv
5 -3 dlv
7 0 dlv
4 3 dlv
7 7 dlv
dle
0 -33 2623 1134 dls
2644 1150 dlt
0 -39 dlv
3 -7 dlv
4 -3 dlv
5 0 dlv
dle
17 0 2637 1134 dls
401 1199 dlt
3 -2 dlv
2 2 dlv
-2 3 dlv
-3 -3 dlv
dle
0 -33 404 1183 dls
0 -33 422 1183 dls
422 1174 dlt
7 7 dlv
5 2 dlv
7 0 dlv
5 -2 dlv
2 -7 dlv
0 -24 dlv
dle
2716 1082 dpb
2716 1170 dpv
2769 1170 dpv
2813 1126 dpv
2769 1082 dpv
dps
512 1131 dpb
512 1219 dpv
566 1219 dpv
610 1175 dpv
566 1131 dpv
dps
1472 176 1511 215 dbs
1472 2135 1511 2174 dbs
1472 1743 1511 1782 dbs
1276 1596 1315 1635 dbs
1472 1596 1511 1635 dbs
1472 1449 1511 1488 dbs
1472 617 1511 656 dbs
1276 763 1315 803 dbs
1472 763 1511 803 dbs
1472 910 1511 950 dbs
gfs
%%Trailer
%%EOF
